# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ main ]
  paths:
    - 'src/**'
    - 'Dockerfile'
    - 'actionDemo.yml'
    - 'pom.xml'
    - '.github/**'
jobs:
  build:
    name: docker build and push
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    # docker build and push
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Build and push
      run: |
        docker build -t 1635537446/action-demo:latest -t 1635537446/action-demo:${{ github.sha }} .
        docker push 1635537446/action-demo:${{ github.sha }}
        docker push 1635537446/action-demo:latest
      # 让K8s应用deployment
    - uses: azure/k8s-set-context@v1
      with:
        method: kubeconfig
        kubeconfig: ${{ secrets.KUBE_CONFIG_DATA }}
        context: default
      id: setcontext
    - name: deploy
      run: |
        sed -i 's/latest/${{ github.sha }}/g' actionDemo.yml
        kubectl apply -f actionDemo.yml